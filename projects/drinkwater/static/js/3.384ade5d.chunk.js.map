{"version":3,"sources":["graphql/mutations/login.generated.tsx","graphql/mutations/userRegister.generated.tsx","pages/Login/index.tsx"],"names":["defaultOptions","LoginDocument","gql","UserRegisterDocument","LoginPage","React","memo","useState","loginButtonValue","setLoginButtonValue","repeatPasswordClass","setRepeatPasswordClass","username","setUsername","password","setPassword","repeatPassword","setRepeatPassword","baseOptions","options","Apollo","useLoginMutation","onError","e","alert","message","onCompleted","data","createCookie","login","accessToken","window","location","href","mutationLogin","useUserRegisterMutation","userRegister","token","mutationUserRegister","className","id","src","alt","type","name","placeholder","value","onChange","target","onClick","preventDefault","variables","input"],"mappings":"8MAIMA,EAAiB,GAYVC,EAAgBC,YAAH,qJCZ1B,IAAMF,EAAiB,GAgCVG,EAAuBD,YAAH,of,kBC7B3BE,EAAuBC,IAAMC,MAAK,WAAO,IAAD,EACIC,mBAAS,UADb,mBACrCC,EADqC,KACnBC,EADmB,OAEUF,mBACpD,mCAH0C,mBAErCG,EAFqC,KAEhBC,EAFgB,OAMZJ,mBAAS,IANG,mBAMrCK,EANqC,KAM3BC,EAN2B,OAOZN,mBAAS,IAPG,mBAOrCO,EAPqC,KAO3BC,EAP2B,OAQAR,mBAAS,IART,mBAQrCS,EARqC,KAQrBC,EARqB,OFiBvC,SACLC,GAKA,IAAMC,EAAO,2BAAQnB,GAAmBkB,GACxC,OAAOE,IACLnB,EACAkB,GEXsBE,CAAiB,CACvCC,QAAS,SAACC,GAAD,OAAOC,MAAMD,EAAEE,UACxBC,YAAa,SAACC,GACZC,YAAa,cAAeD,EAAKE,MAAMC,YAAa,IACpDC,OAAOC,SAASC,KAAO,0BAJpBC,EAfqC,sBDwDvC,SACLhB,GAKA,IAAMC,EAAO,2BAAQnB,GAAmBkB,GACxC,OAAOE,IAGLjB,EAAsBgB,GC3COgB,CAAwB,CACrDb,QAAS,SAACC,GAAD,OAAOC,MAAMD,EAAEE,UACxBC,YAAa,SAACC,GACZC,YAAa,cAAeD,EAAKS,aAAaC,MAAMP,YAAa,IACjEC,OAAOC,SAASC,KAAO,0BAJpBK,EAvBqC,oBAwD5C,OACE,mCACE,qBAAKC,UAAU,+BAA+BC,GAAG,cAAjD,SACE,sBAAKA,GAAG,cAAR,UACE,qBAAKD,UAAU,mBAAf,SACE,qBACEE,IAAI,2FACJD,GAAG,OACHE,IAAI,YACJH,UAAU,8BAGd,iCACE,uBACEI,KAAK,OACLH,GAAG,WACHD,UAAU,4BACVK,KAAK,QACLC,YAAY,WACZC,MAAOlC,EACPmC,SAAU,SAACxB,GAAD,OAAOV,EAAYU,EAAEyB,OAAOF,UAExC,uBACEH,KAAK,WACLH,GAAG,WACHD,UAAU,2BACVK,KAAK,QACLC,YAAY,WACZC,MAAOhC,EACPiC,SAAU,SAACxB,GAAD,OAAOR,EAAYQ,EAAEyB,OAAOF,UAExC,uBACEH,KAAK,WACLH,GAAG,kBACHD,UAAW7B,EACXkC,KAAK,QACLC,YAAY,kBACZC,MAAO9B,EACP+B,SAAU,SAACxB,GAAD,OAAON,EAAkBM,EAAEyB,OAAOF,UAE9C,mBAAGN,GAAG,gBAAgBD,UAAU,sBAChC,uBACEC,GAAG,YACHG,KAAK,SACLJ,UAAU,gBACVO,MAAOtC,EACPyC,QAvEc,SAAC1B,GACzBA,EAAE2B,iBACmC,WAArB1C,EAGd0B,EAAc,CACZiB,UAAW,CACTC,MAAO,CACLxC,WACAE,eAKNwB,EAAqB,CACnBa,UAAW,CACTC,MAAO,CACLxC,WACAE,WACAE,2BAuDF,qBAAKwB,GAAG,aAAaS,QA/FH,WACxBxC,EAAoB,YACpBE,EAAuB,gBA6FjB,SACE,wBAAQ4B,UAAU,iBAAlB,mCAQGnC","file":"static/js/3.384ade5d.chunk.js","sourcesContent":["import * as Types from \"../type.interface\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {};\nexport type LoginMutationVariables = Types.Exact<{\n  input: Types.UserLoginInput;\n}>;\n\nexport type LoginMutationResponse = { __typename?: \"Mutation\" } & {\n  login: { __typename?: \"TokenPayloadDto\" } & Pick<\n    Types.TokenPayloadDto,\n    \"expiresIn\" | \"accessToken\"\n  >;\n};\n\nexport const LoginDocument = gql`\n  mutation login($input: UserLoginInput!) {\n    login(input: $input) {\n      expiresIn\n      accessToken\n    }\n  }\n`;\nexport function useLoginMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    LoginMutationResponse,\n    LoginMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<LoginMutationResponse, LoginMutationVariables>(\n    LoginDocument,\n    options\n  );\n}\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutationResponse>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<\n  LoginMutationResponse,\n  LoginMutationVariables\n>;\n","import * as Types from \"../type.interface\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {};\nexport type UserRegisterMutationVariables = Types.Exact<{\n  input: Types.UserRegisterInput;\n}>;\n\nexport type UserRegisterMutationResponse = { __typename?: \"Mutation\" } & {\n  userRegister: { __typename?: \"RegisterPayload\" } & {\n    user: { __typename?: \"UserEntity\" } & Pick<\n      Types.UserEntity,\n      | \"id\"\n      | \"username\"\n      | \"avatar\"\n      | \"remindMe\"\n      | \"wakeUpTime\"\n      | \"sleepTime\"\n      | \"gender\"\n      | \"weight\"\n      | \"dailyIntake\"\n      | \"containerImage\"\n      | \"containerVolume\"\n      | \"drinkAtATime\"\n      | \"vapidKey\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    >;\n    token: { __typename?: \"TokenPayloadDto\" } & Pick<\n      Types.TokenPayloadDto,\n      \"expiresIn\" | \"accessToken\"\n    >;\n  };\n};\n\nexport const UserRegisterDocument = gql`\n  mutation userRegister($input: UserRegisterInput!) {\n    userRegister(input: $input) {\n      user {\n        id\n        username\n        avatar\n        remindMe\n        wakeUpTime\n        sleepTime\n        gender\n        weight\n        dailyIntake\n        containerImage\n        containerVolume\n        drinkAtATime\n        vapidKey\n        createdAt\n        updatedAt\n      }\n      token {\n        expiresIn\n        accessToken\n      }\n    }\n  }\n`;\nexport function useUserRegisterMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UserRegisterMutationResponse,\n    UserRegisterMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    UserRegisterMutationResponse,\n    UserRegisterMutationVariables\n  >(UserRegisterDocument, options);\n}\nexport type UserRegisterMutationHookResult = ReturnType<\n  typeof useUserRegisterMutation\n>;\nexport type UserRegisterMutationResult =\n  Apollo.MutationResult<UserRegisterMutationResponse>;\nexport type UserRegisterMutationOptions = Apollo.BaseMutationOptions<\n  UserRegisterMutationResponse,\n  UserRegisterMutationVariables\n>;\n","import React, { useState } from \"react\";\nimport { createCookie } from \"../../common/helpers\";\nimport { useLoginMutation } from \"../../graphql/mutations/login.generated\";\nimport { useUserRegisterMutation } from \"../../graphql/mutations/userRegister.generated\";\n\nimport \"./index.css\";\n\nconst LoginPage: React.SFC = React.memo(() => {\n  const [loginButtonValue, setLoginButtonValue] = useState(\"Log In\");\n  const [repeatPasswordClass, setRepeatPasswordClass] = useState(\n    \"fadeIn third d-none login-input\"\n  );\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n\n  const handleClickFooter = () => {\n    setLoginButtonValue(\"Register\");\n    setRepeatPasswordClass(\"login-input\");\n  };\n\n  const [mutationLogin] = useLoginMutation({\n    onError: (e) => alert(e.message),\n    onCompleted: (data) => {\n      createCookie(\"accessToken\", data.login.accessToken, 30);\n      window.location.href = \"/projects/drinkwater\";\n    },\n  });\n\n  const [mutationUserRegister] = useUserRegisterMutation({\n    onError: (e) => alert(e.message),\n    onCompleted: (data) => {\n      createCookie(\"accessToken\", data.userRegister.token.accessToken, 30);\n      window.location.href = \"/projects/drinkwater\";\n    },\n  });\n\n  const handleSummitLogin = (e: any) => {\n    e.preventDefault();\n    const isLogin = loginButtonValue === \"Log In\";\n\n    if (isLogin) {\n      mutationLogin({\n        variables: {\n          input: {\n            username,\n            password,\n          },\n        },\n      });\n    } else {\n      mutationUserRegister({\n        variables: {\n          input: {\n            username,\n            password,\n            repeatPassword,\n          },\n        },\n      });\n    }\n  };\n  return (\n    <>\n      <div className=\"wrapper fadeInDown fixed-top\" id=\"login-modal\">\n        <div id=\"formContent\">\n          <div className=\"fadeIn first m-3\">\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\n              id=\"icon\"\n              alt=\"User Icon\"\n              className=\"rounded-circle user_img\"\n            />\n          </div>\n          <form>\n            <input\n              type=\"text\"\n              id=\"username\"\n              className=\"fadeIn second login-input\"\n              name=\"login\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              id=\"password\"\n              className=\"fadeIn third login-input\"\n              name=\"login\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              id=\"repeat-password\"\n              className={repeatPasswordClass}\n              name=\"login\"\n              placeholder=\"repeat password\"\n              value={repeatPassword}\n              onChange={(e) => setRepeatPassword(e.target.value)}\n            />\n            <p id=\"login-message\" className=\"mt-3 alert-danger\"></p>\n            <input\n              id=\"login-btn\"\n              type=\"submit\"\n              className=\"fadeIn fourth\"\n              value={loginButtonValue}\n              onClick={handleSummitLogin}\n            />\n          </form>\n          <div id=\"formFooter\" onClick={handleClickFooter}>\n            <button className=\"underlineHover\">Register?</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default LoginPage;\n"],"sourceRoot":""}