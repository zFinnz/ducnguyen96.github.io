<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rabbitmq on Thỉnh thoảng đôi lời</title><link>/tags/rabbitmq/</link><description>Recent content in rabbitmq on Thỉnh thoảng đôi lời</description><generator>Hugo -- gohugo.io</generator><language>vi-vn</language><copyright>ducnguyen96</copyright><lastBuildDate>Thu, 07 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/rabbitmq/index.xml" rel="self" type="application/rss+xml"/><item><title>RabbitMQ overview</title><link>/posts/backend/what-is-rabbitmq/</link><pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/backend/what-is-rabbitmq/</guid><description>Nguồn:
Message Broker - Message Queue Trở lại với kiến trúc Monolithic, các components của app bó buộc chặt chẽ với nhau. Ví dụ với một ứng dụng bán lẻ, ta có một checkout service cần kết nối với inventory service thì thường sẽ được giải quyết bằng TCP connection, ngay khi checkout gửi message đến inventory thì nó cần ngay reply trước khi đến với tác vụ tiếp theo, hoặc tệ hơn nếu inventory crash thì nó sẽ cố gắng gửi request cho tới khi thiết lập connection, hoặc nếu có rất nhiều checkouts xảy ra cùng lúc thì inventory service không thể theo kịp.</description></item></channel></rss>